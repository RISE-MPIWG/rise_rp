version: '3.6'
services:
  nginx:
    restart: always
    build: ./docker_containers/production/nginx
    image: docker.gitlab.gwdg.de/portal.pbeloui/rise_rp/nginx_production:latest
    links:
      - web:web
    ports:
      - "443:443"
    volumes:
      - rails-assets:/rise_rp/public/assets
      - rails-uploads:/rise_rp/uploads
    depends_on:
      - web
      - portainer
  redis:
    image: 'redis:latest'
    command: redis-server
    volumes:
      - 'redis:/var/lib/redis/data'
  web:
    restart: always
    depends_on:
      - 'postgres'
      - 'elasticsearch'
      - 'redis'
    build: 
      context: .
      dockerfile: Dockerfile-production
    image: docker.gitlab.gwdg.de/portal.pbeloui/rise_rp/web:latest
    env_file:
      - '.production.env'
    volumes:
      - rails-assets:/rise_rp/public/assets
    command: puma -C ./config/puma.rb
    deploy:
      replicas: 1
  elasticsearch:
    image: elasticsearch:6.4.1
    volumes:
      - esdata:/usr/share/elasticsearch/data
  postgres:
    restart: always
    image: 'postgres'
    environment:
      POSTGRES_USER: 'rise_rp'
      POSTGRES_PASSWORD: 'rise_rp_password'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
  portainer:
    ports: 
      - '9000:9000'
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    deploy:
      placement:
        constraints:
          - node.role == manager
volumes:
  postgres:
    driver: local
  rails-assets:
    driver: local
  rails-uploads:
    driver: local
  portainer_data:
    driver: local
  esdata:
    driver: local
  redis:
    driver: local
