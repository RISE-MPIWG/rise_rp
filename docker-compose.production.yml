version: '3.6'

services:
  traefik:
    image: traefik:1.4
    ports:
      - 80:80
      - 8080:8080
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.toml
    deploy:
      placement:
        constraints:
          - node.role == manager
  web:
    restart: always
    links:
      - 'postgres'
    build: 
      context: .
      dockerfile: Dockerfile-production
    image: docker.gitlab.gwdg.de/portal.pbeloui/rise_rp/web:latest
    env_file:
      - '.production.env'
    volumes:
      - rails-assets:/rise_rp/public/assets
    command: puma -C ./config/puma.rb
    deploy:
      replicas: 2
      labels:
        - "traefik.port=80"
        - "traefik.backend=web"
        - "traefik.frontend.rule=Path:/"
    networks:
      - traefik-net
      - internal

  postgres:
    restart: always
    image: 'postgres'
    environment:
      POSTGRES_USER: 'rise_rp'
      POSTGRES_PASSWORD: 'rise_rp_password'
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    networks:
      - internal
  # elasticsearch:
  #   image: elasticsearch:6.4.1
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  portainer:
    ports: 
      - '9000:9000'
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - intenal
    deploy:
      placement:
        constraints:
          - node.role == manager
networks:
  traefik-net:
    driver: overlay
  internal:
    driver: overlay

configs:
  traefik-config:
    file: docker_containers/traefik/config.toml

volumes:
  postgres:
    driver: local
  rails-assets:
    driver: local
  rails-uploads:
    driver: local
  portainer_data:
    driver: local
  # esdata:
  #   driver: local
